(define (make-queue)
  ;; set-front-ptr! で set! ではなく set-cdr! しないといけないかな？
  ;; あれ？ set! でテスト通ったぞ。意外だなあ front-ptr にqueue全体を追加していかないと
  ;; いけない気がしてたけど
  (let ((front-ptr '())
	(rear-ptr '()))
    (define (set-front-ptr! item)
      (set! front-ptr item))
    (define (set-rear-ptr! item)
      (set! rear-ptr item))
    (define (empty-queue?)
      (null? front-ptr))
    (define (front-queue)
      (if (empty-queue?)
	  (error "FRONT called with an empty queue" (cons front-ptr rear-ptr))
	  (car front-ptr)))
    (define (insert-queue! item)
      (let ((new-pair (cons item '())))
	(cond ((empty-queue?)
	       (set-front-ptr! new-pair)
	       (set-rear-ptr! new-pair)
	       (cons front-ptr rear-ptr))
	      (else
	       (set-cdr! rear-ptr new-pair)
	       (set-rear-ptr! new-pair)
	       (cons front-ptr rear-ptr)))))
    (define (delete-queue!)
      (cond ((empty-queue?)
	 (error "DELETE! called with an empty queue" (cons front-ptr rear-ptr)))
	(else
	 (set-front-ptr! (cdr front-ptr))
	 (cons front-ptr rear-ptr))))
    (define (print-queue)
      front-ptr)
    (define (dispatch m)
      (cond ((eq? m 'set-front-ptr!)
	     set-front-ptr!)
	    ((eq? m 'set-rear-ptr!)
	     set-rear-ptr!)
	    ((eq? m 'empty-queue?)
	     empty-queue?)
	    ((eq? m 'front-queue)
	     front-queue)
	    ((eq? m 'insert-queue!)
	     insert-queue!)
	    ((eq? m 'delete-queue!)
	     delete-queue!)
	    ((eq? m 'print-queue)
	     print-queue)))
    dispatch))
